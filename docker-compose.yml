version: '3.5'

services:
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: nginx.docker
    volumes:
      - ./www:/var/www/bitr
      - ./storage/docker/logs/nginx/:/var/log/nginx/
    ports:
      - "80:80"
    depends_on:
      - php-fpm
      - php-fpm-cli
    networks:
      - backend

  memcached:
    build:
      context: ./docker/memcached
      dockerfile: memcached.docker
    volumes:
      - ./storage/docker/memcached:/var/lib/memcached
    ports:
      - "11211"
    depends_on:
      - php-fpm
    networks:
      - backend

  redis:
    build:
      context: ./docker/redis
      dockerfile: redis.docker
    volumes:
      - ./storage/docker/redis:/data
    ports:
      - "6379"
    networks:
      - backend

  php-fpm-cli:
    build:
      context: ./docker/php
      dockerfile: php-fpm-cli.docker
    volumes:
      - ./www:/var/www/bitr
    depends_on:
      - mysql
    tty: true
    networks:
      - backend

  php-fpm:
    build:
      context: ./docker/php
      dockerfile: php-fpm.docker
    volumes:
      - ./www:/var/www/bitr
      - ./storage/docker/logs/php/:/var/log/php/
    depends_on:
      - mysql
    networks:
      - backend

  mysql:
    build:
      context: ./docker/mysql
      dockerfile: mysql.docker
    volumes:
      - dbdata:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    networks:
      - backend

  mailhog:
    image: mailhog/mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - backend

  elasticsearch:
    build:
      context: ./docker/elasticsearch
      args:
        - ELK_VERSION=${ELK_VERSION}
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    environment:
      - cluster.name=bitrix-cluster
      - node.name=bitrix-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - cluster.initial_master_nodes=bitrix-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9200:9200"
      - "9300:9300"
    depends_on:
      - php-fpm
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  dbdata:
    driver: ${VOLUMES_DRIVER}
  elasticsearch:
    driver: ${VOLUMES_DRIVER}